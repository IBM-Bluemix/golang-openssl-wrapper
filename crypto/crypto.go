/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.6
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: src/github.com/ScarletTanager/openssl/crypto/crypto.i

package crypto

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


extern void _wrap_Swig_free_crypto_c0e63d2ca3f55418(uintptr_t arg1);
extern swig_intgo _wrap_FIPS_mode_set_crypto_c0e63d2ca3f55418(swig_intgo arg1);
extern void _wrap_OpenSSL_add_all_algorithms_crypto_c0e63d2ca3f55418(void);
extern void _wrap_EVP_cleanup_crypto_c0e63d2ca3f55418(void);
#undef intgo
*/
// #cgo LDFLAGS: -lcrypto
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_crypto_c0e63d2ca3f55418(C.uintptr_t(_swig_i_0))
}



func FIPS_mode_set(arg1 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FIPS_mode_set_crypto_c0e63d2ca3f55418(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func OpenSSL_add_all_algorithms() {
	C._wrap_OpenSSL_add_all_algorithms_crypto_c0e63d2ca3f55418()
}

func EVP_cleanup() {
	C._wrap_EVP_cleanup_crypto_c0e63d2ca3f55418()
}


